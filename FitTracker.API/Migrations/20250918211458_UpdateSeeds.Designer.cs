// <auto-generated />
using System;
using FitTrackr.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitTrackr.API.Migrations
{
    [DbContext(typeof(FitTrackrDbContext))]
    [Migration("20250918211458_UpdateSeeds")]
    partial class UpdateSeeds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitTrackr.API.Models.Domain.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IntensityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reps")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.Property<double?>("WeightInKg")
                        .HasColumnType("float");

                    b.Property<Guid>("WorkoutId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IntensityId");

                    b.HasIndex("WorkoutId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("FitTrackr.API.Models.Domain.Intensity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Intensities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("04faaf32-4a41-4b4e-888f-9651092caa08"),
                            Level = "Düşük"
                        },
                        new
                        {
                            Id = new Guid("153480fc-718b-4610-bd4f-ead66fb24a3d"),
                            Level = "Orta"
                        },
                        new
                        {
                            Id = new Guid("7d4ae440-c208-4b50-b252-88730b550d25"),
                            Level = "Yüksek"
                        });
                });

            modelBuilder.Entity("FitTrackr.API.Models.Domain.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b2292de7-dc29-4675-94aa-304b3ce91bf6"),
                            LocationName = "Park"
                        },
                        new
                        {
                            Id = new Guid("2b0090b3-8bcd-49e7-a101-d0a14f13ce56"),
                            LocationName = "Ev"
                        },
                        new
                        {
                            Id = new Guid("62bc269f-ebb0-477e-896b-f4212bf07111"),
                            LocationName = "Spor Salonu"
                        });
                });

            modelBuilder.Entity("FitTrackr.API.Models.Domain.Workout", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("DurationMinutes")
                        .HasColumnType("float");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("WorkoutDate")
                        .HasColumnType("int");

                    b.Property<string>("WorkoutName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("FitTrackr.API.Models.Domain.Exercise", b =>
                {
                    b.HasOne("FitTrackr.API.Models.Domain.Intensity", "Intensity")
                        .WithMany()
                        .HasForeignKey("IntensityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FitTrackr.API.Models.Domain.Workout", "Workout")
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Intensity");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("FitTrackr.API.Models.Domain.Workout", b =>
                {
                    b.HasOne("FitTrackr.API.Models.Domain.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("FitTrackr.API.Models.Domain.Workout", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
